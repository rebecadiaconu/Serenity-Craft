@using Microsoft.AspNet.Identity
@model Serenity_Craft.Models.Book

@{
    ViewBag.Title = Model.Title + " | " + Model.Author;
}

<div style="padding-top: 30px; position: absolute; left: 150px;">
    <img src="/Content/images/back.png" />
    @Html.ActionLink("Back to books list", "Index", "Book")
</div>

<div class="row" style="padding-top: 30px;">
    <div style="text-align: center" class="col-xs-6">
        <img class="book-img" src="@Model.ImagePath" alt="book's image" style="height: 600px;">
        @{
            double rating = 0;

            if (Model.Reviews.Count != 0)
            {
                int sum = 0;

                foreach (var review in Model.Reviews)
                {
                    sum += review.Note;
                }

                rating = sum / Model.Reviews.Count;
            }

            switch (rating)
            {
                case 0:
                    <text>
                        <h4 style="margin: 20px;">☆☆☆☆☆ (@Model.Reviews.Count)</h4>
                    </text>
                    break;
                case 1:
                    <text>
                        <h4 style="margin: 20px;">⭐☆☆☆☆ (@Model.Reviews.Count)</h4>
                    </text>
                    break;
                case 2:
                    <text>
                        <h4 style="margin: 20px;">⭐⭐☆☆☆ (@Model.Reviews.Count)</h4>
                    </text>
                    break;
                case 3:
                    <text>
                        <h4 style="margin: 20px;">⭐⭐⭐☆☆ (@Model.Reviews.Count)</h4>
                    </text>
                    break;
                case 4:
                    <text>
                        <h4 style="margin: 20px;">⭐⭐⭐⭐☆ (@Model.Reviews.Count)</h4>
                    </text>
                    break;
                case 5:
                    <text>
                        <h4 style="margin: 20px;">⭐⭐⭐⭐⭐ (@Model.Reviews.Count)</h4>
                    </text>
                    break;
            }
        }
    </div>
    <div class="col-xs-6">
        <div class="row">
            <h3 class="col-xs-6">@Model.Title</h3>
            <div class="col-xs-6">
                @if (User.IsInRole("Admin"))
                {
                    using (Html.BeginForm(actionName: "Edit", controllerName: "Book", method: FormMethod.Get, routeValues:
                        new { id = Model.BookId }))
                    {
                        <input style="height: 40px; width: 40px; position: absolute; right: 35%; top: 20px;" type="image" src="~/Content/images/edit.png" />
                    }

                    using (Html.BeginForm(actionName: "Delete", controllerName: "Book", method: FormMethod.Post, routeValues:
                        new { id = Model.BookId }))
                    {
                        @Html.HttpMethodOverride(HttpVerbs.Delete)
                        <input style="height: 40px; width: 40px; position: absolute; right: 20%; top:20px;" type="image" src="~/Content/images/remove.png" />
                    }
                }
            </div>
        </div>
        <h3><small>@Model.Author</small></h3>

        <br />
        <h4>DETAILS:</h4>
        @if (Model.Publisher != null)
        {
            <div class="row">
                <h4 class="col-xs-6">Publisher: <small>@Model.Publisher.Name</small></h4>
                @Html.ActionLink("Contact Info", "Details", "Publisher", new { id = Model.PublisherId }, new { @class = "col-xs-6 btn" })
            </div>
        }
        <h4>Number of pages: <small>@Model.Pages</small></h4>
        @if (Model.BookType != null)
        {
            <h4>Book type: <small>@Model.BookType.Name</small></h4>
        }

        @if (Model.Genres.Count > 0)
        {
            <h4>Genres: </h4>
            <ul>
                @foreach (var genre in Model.Genres)
                {
                    <li>@genre.Name</li>
                }
            </ul>
        }

        <br />
        <h2 style="color: red;">@Model.Price RON</h2>
        <br />

        @if (Model.Summary.IsEmpty())
        {
            <h4><small>This book has no summary.</small></h4>
        }
        else
        {
            <h4>Book type: </h4>
            <br />
            <h4><small>@Html.DisplayFor(b => b.Summary)</small></h4>
        }
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    @Html.ActionLink("ADD REVIEW", "New", "Review", new {id = Model.BookId}, new {style= "color: #DB324D; font-size: 1.5rem; font-weight: bold;" })
}

<div class="row">
    @if (Model.Reviews.Count == 0)
    {
        <div class="col-lg-12">
            <h2 style="text-align: center"><small>No reviews yet.</small></h2>
        </div>
    }
    else
    {
        <div class="col-lg-12">
            <h2 style="text-align: center"><small>Reviews</small></h2>
        </div>
        foreach (var review in Model.Reviews)
        {
            <div style="position: relative; padding-bottom: 30px;" class="row">
                <div class="col-md-10">
                    <h4>@review.UserName</h4>
                    <h6><small>@review.ReviewDate</small></h6>
                </div>
                <div class="col-md-2">
                    @{
                        switch (review.Note)
                        {
                            case 0:
                                <text>
                                    <h5 style="margin: 20px;">☆☆☆☆☆ (@review.Note)</h5>
                                </text>
                                break;
                            case 1:
                                <text>
                                    <h5 style="margin: 20px;">⭐☆☆☆☆ (@review.Note)</h5>
                                </text>
                                break;
                            case 2:
                                <text>
                                    <h5 style="margin: 20px;">⭐⭐☆☆☆ (@review.Note)</h5>
                                </text>
                                break;
                            case 3:
                                <text>
                                    <h5 style="margin: 20px;">⭐⭐⭐☆☆ (@review.Note)</h5>
                                </text>
                                break;
                            case 4:
                                <text>
                                    <h5 style="margin: 20px;">⭐⭐⭐⭐☆ (@review.Note)</h5>
                                </text>
                                break;
                            case 5:
                                <text>
                                    <h5 style="margin: 20px;">⭐⭐⭐⭐⭐ (@review.Note)</h5>
                                </text>
                                break;
                        }
                    }
                </div>
            </div>
            <div class="row">
                <br />
                <div class="col-md-12">
                    <h5 style="font-style:italic">@review.Text</h5>
                </div>
            </div>
            if (@User.Identity.GetUserName() == review.UserName)
            {
                <div class="row">
                    @using (Html.BeginForm(actionName: "Edit", controllerName: "Review", method: FormMethod.Get, routeValues:
                        new { id = review.ReviewId }))
                    {
                        <input style="height: 40px; width: 40px; position: relative;" type="image" src="~/Content/images/edit.png" />
                    }

                    @using (Html.BeginForm(actionName: "Delete", controllerName: "Review", method: FormMethod.Post, routeValues:
                        new { id = review.ReviewId }))
                    {
                        @Html.HttpMethodOverride(HttpVerbs.Delete)
                        <input style="height: 40px; width: 40px; position: relative; top: -45px; left: 45px;" type="image" src="~/Content/images/remove.png" />
                    }
                </div>
            }

            <hr />
        }
    }
</div>


