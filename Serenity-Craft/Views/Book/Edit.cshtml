@model Serenity_Craft.Models.Book
@{
    ViewBag.Title = "Edit";
}

<div style="padding-top: 30px; position: absolute; left: 150px;">
    <img src="/Content/images/back.png" />
    @Html.ActionLink("Back to books list", "Index", "Book")
</div>

<h2>@ViewBag.Title @Model.Title</h2>

@if (ViewBag.Message != null)
{
    <div class="alert alert-danger ">@ViewBag.Message</div>
}

@using (Html.BeginForm("Edit", "Book", FormMethod.Post, new
{
    enctype = "multipart/form-data"
}))
{
    @Html.HttpMethodOverride(HttpVerbs.Put)

    @Html.HiddenFor(b => b.BookId)
    <br />

    <div class="row">
        <div class="col-md-6">
            @Html.Label("Title", "Book title:")
            <br />
            @Html.EditorFor(b => b.Title, new { placeholder = "Type in the book's title", @class = "form-control" })
            @Html.ValidationMessageFor(b => b.Title, "", new { @class = "text-danger" })
            <br />
            <br />

            @Html.Label("Author", "Author name:")
            <br />
            @Html.EditorFor(b => b.Author, new { placeholder = "Type in the book's author", @class = "form-control" })
            @Html.ValidationMessageFor(b => b.Author, "", new { @class = "text-danger" })
            <br />
            <br />

            @Html.Label("Number of pages", "Number of pages:")
            <br />
            @Html.EditorFor(b => b.Pages, new { placeholder = "Type in the book's number of pages", @class = "form-control" })
            @Html.ValidationMessageFor(b => b.Pages, "", new { @class = "text-danger" })
            <br />
            <br />

            @Html.Label("Price", "Price:")
            <br />
            @Html.EditorFor(b => b.Price, new { placeholder = "Type in the book's price", @class = "form-control" })
            @Html.ValidationMessageFor(b => b.Price, "", new { @class = "text-danger" })
            <br />
            <br />

            @Html.Label("Summary", "Summary:")
            <br />
            @Html.TextAreaFor(b => b.Summary, new { placeholder = "Type in the book's summary", @class = "form-control", @rows = "10" })
            @Html.ValidationMessageFor(b => b.Summary, "", new { @class = "text-danger" })
            <br />
            <br />
        </div>
        <div class="col-md-6">
            @Html.Label("BookType", "BookType:")
            <br />
            @Html.DropDownListFor(b => b.BookTypeId, new SelectList(Model.BookTypesList, "Value", "Text"), "Choose a book type", new { @class = "form-control" })
            @Html.ValidationMessageFor(b => b.BookTypeId, "", new { @class = "text-danger" })
            <br />
            <br />

            @Html.Label("Publisher", "Publisher:")
            <br />
            @Html.DropDownListFor(b => b.PublisherId, new SelectList(Model.PublishersList, "Value", "Text"), "Choose a publisher", new { @class = "form-control" })
            @Html.ValidationMessageFor(b => b.PublisherId, "", new { @class = "text-danger" })
            <br />
            <br />

            @Html.LabelFor(b => b.GenresList, "Choose genres:")
            <br />
            @for (int i = 0; i < Model.GenresList.Count(); i++)
            {
                @Html.HiddenFor(b => b.GenresList[i].Id)
                @Html.HiddenFor(b => b.GenresList[i].Name)
                @Html.CheckBoxFor(b => b.GenresList[i].Checked)
                @Html.DisplayFor(b => b.GenresList[i].Name)
                <br />
            }
            <br />
        </div>
        <div class="col-lg-12">
            @Html.LabelFor(b => b.ImagePath, "Book's image:")
            <br
            @Html.EditorFor(m => m.ImagePath)
            <br/>
            <input type="file" name="ImageFile" />
            <br />
            @Html.ValidationMessageFor(b => b.ImagePath, "", new { @class = "text-danger" })
            <br />
            <br />
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Update</button>
}

