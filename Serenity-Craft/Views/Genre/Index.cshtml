@using PagedList.Mvc;
@model PagedList.IPagedList<Serenity_Craft.Models.Genre>
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Genres";
}

<br />
<br />

@if (ViewBag.Message != null)
{
    <div class="alert alert-warning" style="text-align: center; position: relative">
        <p>We have @ViewBag.Message book/books who has been assigned to this genre.</p>
        <p>Deleting this one will involve that all these books will be gone to.</p>
        <h3>Are you sure you want to delete this genre?</h3>

        @using (Html.BeginForm(actionName: "Delete", controllerName: "Genre", method: FormMethod.Post, routeValues:
            new { id = ViewBag.PubId, delete = 1 }))
        {
            @Html.HttpMethodOverride(HttpVerbs.Delete)
            <button class="btn btn-danger " type="submit" style="position: absolute; left: 45%;">YES</button>
        }

        @using (Html.BeginForm(actionName: "Index", controllerName: "Genre", method: FormMethod.Get, routeValues:
            new { id = (dynamic)null }))
        {
            <button class="btn btn-primary" type="submit" style="position: absolute; right: 45%;">NO</button>
        }
        <br />
        <br />
    </div>
}
<br />
<br />

<div style="position: relative;">
    <h2>@ViewBag.Title</h2>

    @using (Html.BeginForm(actionName: "New", controllerName: "Genre", method: FormMethod.Get))
    {
        <input style="height: 40px; width: 40px; position: absolute; right: 0; top: 0;" type="image" src="~/Content/images/plus.png" />
    }
</div>

<div class="col-md-3">
    <h5>
        Sort by title:
        <small>
            @Html.ActionLink("A - Z", "Index", new { sortOrder = "" },
                new { style = "color: #DB324D; font-size: 1.5rem; font-weight: bold;" }) /
            @Html.ActionLink("Z - A", "Index", new { sortOrder = "title_desc" },
                new { style = "color: #DB324D; font-size: 1.5rem; font-weight: bold;" })
        </small>
    </h5>
</div>

<br />
<br />
<table class="table table-hover table-responsive table-condensed" style="width: 100%">
    <thead>
        <tr>
            <th scope="col" class="col-md-4"><h4>Name</h4></th>
            <th scope="col" class="col-md-8"><h4>More</h4></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var genre in Model)
        {
            <tr>
                <th scope="row">@genre.Name</th>
                <td>
                    <div class="row">
                        <div class="col-md-4">
                            @using (Html.BeginForm(actionName: "Edit", controllerName: "Genre", method: FormMethod.Get, routeValues:
                                new { id = genre.GenreId }))
                            {
                                <button style="margin-right: 5px" class="btn btn-primary" type="submit">Update</button>
                            }
                        </div>
                        <div class="col-md-4">
                            @using (Html.BeginForm(actionName: "Delete", controllerName: "Genre", method: FormMethod.Post, routeValues:
                                new {id = genre.GenreId }))
                            {
                                @Html.HttpMethodOverride(HttpVerbs.Delete)
                                <button class="btn btn-danger" type="submit">Delete</button>
                            }
                        </div>

                    </div>
                    <br />
                </td>
            </tr>
        }
    </tbody>
</table>
<br />

@{
    <p>Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount</p>

    @Html.PagedListPager(Model, page => Url.Action("Index",
        new { page, sortOrder = ViewBag.CurrentSort }));
}